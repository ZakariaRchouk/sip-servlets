package com.tcs;

/*
Project : voice Mail server
Author : altanai Bisht
Role : Developer @ CNS lab , Delhi
http://altanaitelecom.wordpress.com
Date : 4 Sep , 2012
*/


//----------------------------- import the local classes
import com.tcs.*;

//-----------------------------import utility classes
import java.util.*;
import java.util.Properties;

//-----------------------------import sip servlet classes
import javax.servlet.sip.*;
import javax.servlet.*;
import javax.servlet.ServletException;
import javax.servlet.sip.Proxy;

//------------------------------import java mail classes
import javax.mail.*;
import javax.mail.Message.RecipientType;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

//-----------------------------import java net classes
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;
import java.net.URLConnection;

//-------------------------------import input output classes
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;
import java.io.*;

//---------------------------import security classes
import java.security.Security;

public class Voicemailserver extends SipServlet
{

   private static SipFactory factory;
			private static SipApplicationSession sas;
			private static Proxy proxy;
   private static ServletContext context;

		  String strcaller=null;
		  String strcallee=null;

    String SMTP_HOST_NAME ;
    String SMTP_PORT;
    String emailSubjectTxt;
    String emailFromAddress;
    String SSL_FACTORY ;
    String sendTo ;

		SipServletRequest caller_req_b2bua, b2bua_req_callee , b2bua_req_voicemail;
		SipServletResponse b2bua_resp_caller, callee_resp_b2bua , voicemail_resp_b2bua;

		SipSession caller_b2bua_session;
		SipSession b2bua_callee_session;

		String voicemailuri;
		String vxmluri;
		String VoxpilotAudioPath;
		String voxpilotAudioString;

/*
* Init function to handle application intitation
*/
public void init(ServletConfig config) throws ServletException
{
																														System.out.println(" Application voice mail server ");
																														System.out.println("================================");
		super.init(config);
		context=config.getServletContext();
		factory = (SipFactory) context.getAttribute(SipServlet.SIP_FACTORY);
		sas=factory.createApplicationSession();

		try
		{
		voicemailuri=readproperty("voicemailuri");
		vxmluri=readproperty("vxmluri");
		VoxpilotAudioPath=readproperty("VoxpilotAudioPath");
		voxpilotAudioString=readproperty("voxpilotAudioString");
		}
		catch(IOException e)
		{
			System.out.println("Error : Can't read property file !");
			e.printStackTrace();
		}

}

/*
* Registering the UAC's
*/
public void doRegister(SipServletRequest request) throws ServletException, IOException
{
                        																							System.out.println("\n Recieved Request : Register");
																													System.out.println("----------------------------");
			super.doRegister(request);
}

/*
* Handle sinvites generated by mobile clients
*/
public void doInvite(SipServletRequest request) throws ServletException, IOException
{
																													System.out.println("\n Recieved Request : Invite");
																													 System.out.println("----------------------------");
		if (request.isInitial())
		{
				caller_req_b2bua=request;

                strcaller=request.getFrom().getURI().toString();
				strcallee=request.getTo().getURI().toString();
																													  System.out.println(" Call Made from "+ request.getFrom());
																													  System.out.println(" Call Made To "+ request.getTo());
				caller_b2bua_session = request.getSession();
																													  System.out.println(" caller_b2bua_session id : "+ caller_b2bua_session.getId());
				//Froward the request to callee
				b2bua_req_callee=factory.createRequest(sas,"INVITE",strcaller,strcallee);
				b2bua_req_callee.setContent(request.getContent(),request.getContentType());
				b2bua_req_callee.send();

				b2bua_callee_session = b2bua_req_callee.getSession();
																												     System.out.println(" b2bua_callee_Session id : "+ b2bua_callee_session.getId());

		}
}

/*
* request method to handle incoming responses
*/
public void doResponse(SipServletResponse resp) throws ServletException, IOException
	{
																													System.out.println("\n Recieved Response for :"+resp.getRequest().getMethod());
																													System.out.println("status :"+resp.getStatus());
																												    System.out.println("----------------------------");
 		if((resp.getRequest().getMethod().equals("INVITE")) && (resp.getRequest().getFrom().toString().contains(strcaller)) && (resp.getStatus()!= 200) && (resp.getStatus()!= 100) && (resp.getStatus()!= 180))
		{
				callee_resp_b2bua= resp;
																													System.out.println("not avaliable response from calle -> sending request to vxml ");
				b2bua_req_voicemail=factory.createRequest(sas,"INVITE",voicemailuri,vxmluri);
				b2bua_req_voicemail.setContent(caller_req_b2bua.getContent(),caller_req_b2bua.getContentType());
				b2bua_req_voicemail.send();
		}

		if((resp.getRequest().getMethod().equals("INVITE")) && (resp.getRequest().getFrom().toString().contains(strcaller)) && (resp.getStatus()== 200) )
		{
				callee_resp_b2bua= resp;
																													System.out.println("200 ok response from callee -> sending response to caller and ack to callee ");
				b2bua_resp_caller=caller_req_b2bua.createResponse(200,"OK");
				b2bua_resp_caller.setContent(resp.getContent(),resp.getContentType());
				b2bua_resp_caller.send();

				resp.createAck().send();
		}
		if((resp.getRequest().getMethod().equals("INVITE")) && (resp.getRequest().getTo().toString().contains(vxmluri)) && (resp.getStatus()== 200))
		{
				voicemail_resp_b2bua=resp ;
																													System.out.println(" 200 ok from vxml -> sending response to caller and ack to vxml ");
				b2bua_resp_caller=caller_req_b2bua.createResponse(200,"OK");
				b2bua_resp_caller.setContent(resp.getContent(),resp.getContentType());
				b2bua_resp_caller.send();

				resp.createAck().send();

		}
	}

/*
* Function to handle incoming bye requests
*/
public void doBye(SipServletRequest req) throws javax.servlet.ServletException,java.io.IOException
	{
																													System.out.println("\n Recieved Request : Bye");
																													System.out.println("----------------------------");
		if (req.getFrom().toString().contains(vxmluri))
		{
																													System.out.println(" vxml session closing with bye  ");
			req.createResponse(200).send();
			caller_b2bua_session.createRequest("BYE").send();

			try
			{
					sendmail();
			}
			catch (MessagingException me)
			{
					System.out.println("Error : Couln't deliver the voice mail  !");
					me.printStackTrace();
			}
		}

		else if(req.getFrom().toString().contains(strcallee))
		{
																													System.out.println(" callee sends bye -> noarmal caller callee session closing with bye  ");
			req.createResponse(200).send();
			caller_b2bua_session.createRequest("BYE").send();

		}
		else if(req.getFrom().toString().contains(strcaller))
		{
																													System.out.println(" caller sends bye -> noarmal caller callee session closing with bye  ");
			req.createResponse(200).send();
			b2bua_callee_session.createRequest("BYE").send();

		}
}

/*
* file name of the stored voice message
*/
public String getFileName()
{
																										System.out.println("In File Name function");
		File dir = new File("C:\\Voxpilot\\vxmlinterpreter\\www\\audio");
																										System.out.println(" is dir a directory : "+dir.isDirectory());
		File af=null, list[]=dir.listFiles();
		long mod=list[0].lastModified();

		for(int i=0; i<list.length; i++)
		{
			File f=list[i];
			long md=f.lastModified();
			if(mod<=md)
			{
				mod=md;
				af=f;
     		}
		}
																										System.out.println(" file name : "+af.getName());
		return af.getName();
}

/*
* Function to send mail
*/
public void sendmail() throws MessagingException, AddressException , IOException
{
																									   System.out.println("In email send function ");

											SMTP_HOST_NAME =readproperty("SMTP_HOST_NAME");
											SMTP_PORT=readproperty("SMTP_PORT");
											emailSubjectTxt=readproperty("emailSubjectTxt");
											emailFromAddress=readproperty("emailFromAddress");
											SSL_FACTORY=readproperty("SSL_FACTORY");
											sendTo= readproperty("sendTo");

            boolean debug = true;

            Properties props = new Properties();
            props.put("mail.smtp.host", SMTP_HOST_NAME);
            props.put("mail.smtp.auth", "true");
            props.put("mail.debug", "true");
            props.put("mail.smtp.port", SMTP_PORT);
            props.put("mail.smtp.socketFactory.port", SMTP_PORT);
            props.put("mail.smtp.socketFactory.class", SSL_FACTORY);
            props.put("mail.smtp.socketFactory.fallback", "false");

             Session session = Session.getDefaultInstance(props,
              new javax.mail.Authenticator()
														{
                      protected PasswordAuthentication getPasswordAuthentication()
																						{
                      return new PasswordAuthentication("tcscns@gmail.com", "tcs@123456");//Mail-id and password
                      }
              });


           Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());
           session.setDebug(debug);

           Message msg = new MimeMessage(session);

          InternetAddress addressFrom = null;
		  addressFrom = new InternetAddress(emailFromAddress );
		  msg.setFrom(addressFrom);

          InternetAddress addressTo = new InternetAddress();
		  addressTo = new InternetAddress(sendTo);
		  msg.setRecipient(Message.RecipientType.TO,addressTo);

		  msg.setSubject(emailSubjectTxt);
		  msg.setContent(" http://10.1.5.22:9002/audio/"+getFileName(),"text/html");

		  Transport.send(msg);
}

/*
* Write to a property file
*/
public void writeproperty(String property ,String value) throws IOException
    {
    		Properties prop = new Properties();

    		prop.setProperty(property,value);

    		prop.store(new FileOutputStream("C:\\bea30\\user_projects\\domains\\B2BUA\\Voicemailserver\\src\\com\\tcs\\config.properties"), null);
    }

/*
* Read from a property file
*/
public String readproperty(String property) throws IOException
    {
    		Properties prop = new Properties();

			prop.load(new FileInputStream("C:\\bea30\\user_projects\\domains\\B2BUA\\Voicemailserver\\src\\com\\tcs\\config.properties"));

         return prop.getProperty(property);
    }


}

























